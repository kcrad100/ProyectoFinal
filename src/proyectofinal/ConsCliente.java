/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class ConsCliente extends javax.swing.JFrame {

    /**
     * Creates new form ConsCliente
     */
    public MenuPpal menuPpal;
    
    public ConsCliente(MenuPpal menuPpal) {
        initComponents();
        this.menuPpal = menuPpal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btDelCs = new javax.swing.JButton();
        btModCs = new javax.swing.JButton();
        btAtrasCs = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtConsulta = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Consulta General");

        btDelCs.setText("Eliminar");
        btDelCs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelCsActionPerformed(evt);
            }
        });

        btModCs.setText("Modificar");
        btModCs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModCsActionPerformed(evt);
            }
        });

        btAtrasCs.setText("Atras");
        btAtrasCs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtrasCsActionPerformed(evt);
            }
        });

        jtConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Direccion", "Telefono", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(270, 270, 270))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btAtrasCs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btModCs)
                        .addGap(44, 44, 44)
                        .addComponent(btDelCs))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btDelCs)
                    .addComponent(btModCs)
                    .addComponent(btAtrasCs))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Mostrar();
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void btAtrasCsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtrasCsActionPerformed
        this.setVisible(false);
        menuPpal.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_btAtrasCsActionPerformed

    private void btModCsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModCsActionPerformed
        //TODO add your handling code here:

    }//GEN-LAST:event_btModCsActionPerformed

    private void btDelCsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelCsActionPerformed
//        if (this.jlVentana.getSelectedIndex() >= 0 && this.jlVentana.getSelectedIndex() < this.modelo.size()) {
//            
//        } else {
//            JOptionPane.showMessageDialog(this, "NO HAY UN CONTACTO SELECCIONADO","Error",JOptionPane.ERROR_MESSAGE);
//        }  
//        // TODO add your handling code here:
    }//GEN-LAST:event_btDelCsActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtrasCs;
    private javax.swing.JButton btDelCs;
    private javax.swing.JButton btModCs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtConsulta;
    // End of variables declaration//GEN-END:variables
    private BaseDatos bd;
    private DefaultTableModel modelo = new DefaultTableModel();
    private int opcion;
    
    public void Mostrar() {
        generaMatrizDatos();
        
        switch (opcion) {
            
            case 1:
                System.out.println("tamaño antes:" + getBd().getClientes().size());
//                
//                //mostrar
//
//                int i = 0;
//                while (i < bd.getClientes().size()) {
//                    if (bd.getClientes().get(i).isHabilitado()) {
//                        getModelo().setValueAt(bd.getClientes().get(i).getIdCliente(), i + 1, 1);
//                        getModelo().setValueAt(bd.getClientes().get(i).getIdCliente(), i + 1, 2);
//                        getModelo().setValueAt(bd.getClientes().get(i).getIdCliente(), i + 1, 3);
//                        getModelo().setValueAt(bd.getClientes().get(i).getIdCliente(), i + 1, 4);
//                        getModelo().setValueAt(bd.getClientes().get(i).getIdCliente(), i + 1, 5);
//                    }
//                    i++;
//                }
//                this.jtConsulta.setModel(modelo);

                break;

//            case 2:
//                System.out.println("tamaño antes:" + getBd().getProductos().size());
//                setModelo(new DefaultListModel());
//                //mostrar
//                int j = 0;
//                while (j < bd.getProductos().size()) {
//                    if (bd.getProductos().get(j).isHabilitado()) {
//                        getModelo().addElement(bd.getProductos().get(j).ToString());
//                    }
//                    j++;
//                }
//                this.getJlVentana().setModel(getModelo());
//
//                break;
//
//            case 3:
//                System.out.println("tamaño antes:" + getBd().getVentas().size());
//                setModelo(new DefaultListModel());
//                //mostrar
//                int k = 0;
//                while (k < bd.getVentas().size()) {
//                    if (bd.getVentas().get(k).isHabilitado()) {
//                        getModelo().addElement(bd.getVentas().get(k).ToString());
//                    }
//                    k++;
//                }
//                this.getJlVentana().setModel(getModelo());
//
//                break;
            default:
                System.err.println("1");
            
        }
    }

    /**
     * @return the bd
     */
    public BaseDatos getBd() {
        return bd;
    }

    /**
     * @param bd the bd to set
     */
    public void setBd(BaseDatos bd) {
        this.bd = bd;
    }

    /**
     * @return the jlVentana
     */
//    public javax.swing.JList getJlVentana() {
//        return jlVentana;
//    }
//
//    /**
//     * @return the modelo
//     */
//    public DefaultListModel getModelo() {
//        return modelo;
//    }
//
//    /**
//     * @param modelo the modelo to set
//     */
//    public void setModelo(DefaultListModel modelo) {
//        this.modelo = modelo;
//    }
    /**
     * @return the opcion
     */
    public int getOpcion() {
        return opcion;
    }

    /**
     * @param opcion the opcion to set
     */
    public void setOpcion(int opcion) {
        this.opcion = opcion;
    }

    /**
     * @return the modelo
     */
    public DefaultTableModel getModelo() {
        return modelo;
    }

    /**
     * @param modelo the modelo to set
     */
    public void setModelo(DefaultTableModel modelo) {
        this.modelo = modelo;
    }
    
    public void generaMatrizDatos() {
        ArrayList lista = bd.getClientes();
        Object[][] matriz = new Object[lista.size()][5];
        for (int i = 0; i < lista.size(); i++) {
            Cliente cTemp = (Cliente) lista.get(i);
            
            matriz[i][0] = cTemp.getIdCliente();
            matriz[i][1] = cTemp.getNomCliente();
            matriz[i][2] = cTemp.getDirCliente();
            matriz[i][3] = cTemp.getTelCliente();
            matriz[i][4] = cTemp.getEmailCliente();
            
        }
        String[] identificadores = new String[]{"Id", "Nombre", "Direccion", "Telefono", "Email"};
        modelo.setDataVector(matriz, identificadores);
        jtConsulta.setModel(modelo);
    }
}
